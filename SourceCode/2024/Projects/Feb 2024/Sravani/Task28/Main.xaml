<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:Annotation.AnnotationText="UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9" sap:VirtualizedContainerService.HintSize="602,2982" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="PDF Automation" sap:VirtualizedContainerService.HintSize="416,2917.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PDF_Text" />
      <Variable x:TypeArguments="x:Int32" Name="Pdf_PageCount1" />
      <Variable x:TypeArguments="x:Int32" Name="Pdf_PageCount2" />
      <Variable x:TypeArguments="x:Int32" Name="CombinedPDF_PageCount" />
      <Variable x:TypeArguments="x:String" Name="OCRText" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadPDFText PreserveFormatting="{x:Null}" sap2010:Annotation.AnnotationText="Get the Text from the PDF" DisplayName="Read PDF Text" FileName="PDF Sample2.pdf" sap:VirtualizedContainerService.HintSize="354,154.66666666666666" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[PDF_Text]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadPDFText>
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="PdfData.txt" sap:VirtualizedContainerService.HintSize="354,176.66666666666666" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[PDF_Text]" />
    <WriteLine sap2010:Annotation.AnnotationText="Write the extracted text to Output Pannel" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,162.66666666666666" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[String.Format(&quot;The extrated text from PDF Sample 2 file is {0}&quot;, PDF_Text)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
    <upap:GetPDFPageCount sap2010:Annotation.AnnotationText="Get the Count of the PDF Pages" DisplayName="Get PDF Page Count" FileName="Sample PDF file.pdf" sap:VirtualizedContainerService.HintSize="354,154.66666666666666" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[Pdf_PageCount1]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </upap:GetPDFPageCount>
    <WriteLine sap2010:Annotation.AnnotationText="Write the PDF pages Count to Output" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,162.66666666666666" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[String.Format(&quot;The Count of Pages in PDF file named Sample PDF file  is {0}&quot;,Pdf_PageCount1.ToString)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
    <upap:GetPDFPageCount sap2010:Annotation.AnnotationText="Get the Count of the PDF Pages" DisplayName="Get PDF Page Count" FileName="PDF Sample2.pdf" sap:VirtualizedContainerService.HintSize="354,154.66666666666666" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_2" PageCount="[Pdf_PageCount2]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </upap:GetPDFPageCount>
    <WriteLine sap2010:Annotation.AnnotationText="Write the PDF pages Count to Output" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,162.66666666666666" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[String.Format(&quot;The Count of Pages in PDF file named PDF Sample2 file  is {0}&quot;,Pdf_PageCount2.ToString)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
    <upap:JoinPDF DisplayName="Join PDF Files" FileList="[{&quot;PDF Sample2.pdf&quot;,&quot;Sample PDF file.pdf&quot;}]" sap:VirtualizedContainerService.HintSize="354,124" sap2010:WorkflowViewState.IdRef="JoinPDF_1" OutputFileName="Combined PDF File.pdf" />
    <upap:GetPDFPageCount sap2010:Annotation.AnnotationText="Get the Count of the PDF Pages" DisplayName="Get PDF Page Count" FileName="Combined PDF File.pdf" sap:VirtualizedContainerService.HintSize="354,154.66666666666666" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_3" PageCount="[CombinedPDF_PageCount]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </upap:GetPDFPageCount>
    <WriteLine sap2010:Annotation.AnnotationText="Write the Combined PDF pages Count to Output" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,162.66666666666666" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[String.Format(&quot;The Count of Pages in Combined PDF file  is {0}&quot;,CombinedPDF_PageCount.ToString)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
    <upap:ExtractPDFPageRange sap2010:Annotation.AnnotationText="Extract the Pages from PDF&#xA;" DisplayName="Extract PDF Page Range" FileName="Sample PDF file.pdf" sap:VirtualizedContainerService.HintSize="354,224.66666666666666" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_1" OutputFileName="Sample PDF file pages 8 to 22.pdf" Range="8-22">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </upap:ExtractPDFPageRange>
    <WriteLine sap2010:Annotation.AnnotationText="to check if the pages are extracted" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,162.66666666666666" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Pages Extracted from PDF">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </WriteLine>
    <upap:ExtractImagesFromPDF sap2010:Annotation.AnnotationText="Extract the images from PDF" DisplayName="Extract Images From PDF" FileName="PDF Sample2.pdf" sap:VirtualizedContainerService.HintSize="354,154.66666666666666" sap2010:WorkflowViewState.IdRef="ExtractImagesFromPDF_1" OutputFolderName="C:\Users\Kesava\Documents\GitHub\RPA-Developer-in-30-Days\SourceCode\2024\Feb 2024\Sravani\Task28\PDF Images">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </upap:ExtractImagesFromPDF>
    <upap:ExportPDFPageAsImage DisplayName="Export PDF Page As Image" FileName="Sample PDF file.pdf" sap:VirtualizedContainerService.HintSize="354,179.33333333333334" sap2010:WorkflowViewState.IdRef="ExportPDFPageAsImage_1" ImageDpi="150" OutputFileName="PDF Image_Page3.png" PageNumber="3" />
    <upap:ManagePDFPassword DisplayName="Manage PDF Password" FileName="SamplePdf1_12mb_6pages (1).pdf" sap:VirtualizedContainerService.HintSize="354,179.33333333333334" sap2010:WorkflowViewState.IdRef="ManagePDFPassword_1" NewUserPassword="abcd" OutputFileName="output\password.pdf" />
    <ui:ReadPDFWithOCR Text="{x:Null}" DegreeOfParallelism="1" DisplayName="Read PDF With OCR" FileName="SamplePdf1_12mb_6pages (1).pdf" sap:VirtualizedContainerService.HintSize="354,199.33333333333334" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All">
      <ui:ReadPDFWithOCR.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,25.333333333333332" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" NoopExecution="False" Text="[OCRText]" />
        </ActivityFunc>
      </ui:ReadPDFWithOCR.OCREngine>
    </ui:ReadPDFWithOCR>
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="OCRText.txt" sap:VirtualizedContainerService.HintSize="354,159.33333333333334" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[OCRText]" />
  </Sequence>
</Activity>